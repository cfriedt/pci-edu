commit 4c41ccf916c286e6256b2245c2ce90ed374b3dff
Author: Christopher Friedt <chrisfriedt@gmail.com>
Date:   Sat Jan 8 21:19:38 2022 -0500

    hw: misc: edu: fix 2 off-by-one errors
    
    In the case that size1 was zero, because of the explicit
    'end1 > addr' check, the range check would fail and the error
    message would read as shown below. The correct comparison
    is 'end1 >= addr' (or 'addr <= end1').
    
    EDU: DMA range 0x40000-0x3ffff out of bounds (0x40000-0x3ffff)!
    
    At the opposite end, in the case that size1 was 4096, within()
    would fail because of the non-inclusive check 'end1 < end2',
    which should have been 'end1 <= end2'. The error message would
    previously say
    
    EDU: DMA range 0x40000-0x40fff out of bounds (0x40000-0x40fff)!
    
    The solution is to use non-inclusive ranges e.g. [begin,end).
    
    Signed-off-by: Christopher Friedt <chrisfriedt@gmail.com>

diff --git a/hw/misc/edu.c b/hw/misc/edu.c
index e935c418d4..73e97a54e7 100644
--- a/hw/misc/edu.c
+++ b/hw/misc/edu.c
@@ -103,25 +103,21 @@ static void edu_lower_irq(EduState *edu, uint32_t val)
     }
 }
 
-static bool within(uint64_t addr, uint64_t start, uint64_t end)
-{
-    return start <= addr && addr < end;
-}
-
 static void edu_check_range(uint64_t addr, uint64_t size1, uint64_t start,
                 uint64_t size2)
 {
     uint64_t end1 = addr + size1;
     uint64_t end2 = start + size2;
 
-    if (within(addr, start, end2) &&
-            end1 > addr && within(end1, start, end2)) {
+    if (start <= addr && addr < end2 &&
+        addr <= end1 &&
+        start <= end1 && end1 <= end2) {
         return;
     }
 
-    hw_error("EDU: DMA range 0x%016"PRIx64"-0x%016"PRIx64
-             " out of bounds (0x%016"PRIx64"-0x%016"PRIx64")!",
-            addr, end1 - 1, start, end2 - 1);
+    hw_error("EDU: DMA range [0x%016"PRIx64", 0x%016"PRIx64")"
+             " out of bounds [0x%016"PRIx64", 0x%016"PRIx64")!",
+            addr, end1, start, end2);
 }
 
 static dma_addr_t edu_clamp_addr(const EduState *edu, dma_addr_t addr)
